// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace CppMMO.Protocol
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct C_ChangeZone : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static C_ChangeZone GetRootAsC_ChangeZone(ByteBuffer _bb) { return GetRootAsC_ChangeZone(_bb, new C_ChangeZone()); }
  public static C_ChangeZone GetRootAsC_ChangeZone(ByteBuffer _bb, C_ChangeZone obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public C_ChangeZone __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int TargetZoneId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public long CommandId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static Offset<CppMMO.Protocol.C_ChangeZone> CreateC_ChangeZone(FlatBufferBuilder builder,
      int target_zone_id = 0,
      long command_id = 0) {
    builder.StartTable(2);
    C_ChangeZone.AddCommandId(builder, command_id);
    C_ChangeZone.AddTargetZoneId(builder, target_zone_id);
    return C_ChangeZone.EndC_ChangeZone(builder);
  }

  public static void StartC_ChangeZone(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddTargetZoneId(FlatBufferBuilder builder, int targetZoneId) { builder.AddInt(0, targetZoneId, 0); }
  public static void AddCommandId(FlatBufferBuilder builder, long commandId) { builder.AddLong(1, commandId, 0); }
  public static Offset<CppMMO.Protocol.C_ChangeZone> EndC_ChangeZone(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<CppMMO.Protocol.C_ChangeZone>(o);
  }
  public C_ChangeZoneT UnPack() {
    var _o = new C_ChangeZoneT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(C_ChangeZoneT _o) {
    _o.TargetZoneId = this.TargetZoneId;
    _o.CommandId = this.CommandId;
  }
  public static Offset<CppMMO.Protocol.C_ChangeZone> Pack(FlatBufferBuilder builder, C_ChangeZoneT _o) {
    if (_o == null) return default(Offset<CppMMO.Protocol.C_ChangeZone>);
    return CreateC_ChangeZone(
      builder,
      _o.TargetZoneId,
      _o.CommandId);
  }
}

public class C_ChangeZoneT
{
  public int TargetZoneId { get; set; }
  public long CommandId { get; set; }

  public C_ChangeZoneT() {
    this.TargetZoneId = 0;
    this.CommandId = 0;
  }
}


static public class C_ChangeZoneVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*TargetZoneId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*CommandId*/, 8 /*long*/, 8, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
