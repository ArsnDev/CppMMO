// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace CppMMO.Protocol
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct C_Login : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static C_Login GetRootAsC_Login(ByteBuffer _bb) { return GetRootAsC_Login(_bb, new C_Login()); }
  public static C_Login GetRootAsC_Login(ByteBuffer _bb, C_Login obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public C_Login __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string SessionTicket { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSessionTicketBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetSessionTicketBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetSessionTicketArray() { return __p.__vector_as_array<byte>(4); }
  public long CommandId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static Offset<CppMMO.Protocol.C_Login> CreateC_Login(FlatBufferBuilder builder,
      StringOffset session_ticketOffset = default(StringOffset),
      long command_id = 0) {
    builder.StartTable(2);
    C_Login.AddCommandId(builder, command_id);
    C_Login.AddSessionTicket(builder, session_ticketOffset);
    return C_Login.EndC_Login(builder);
  }

  public static void StartC_Login(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddSessionTicket(FlatBufferBuilder builder, StringOffset sessionTicketOffset) { builder.AddOffset(0, sessionTicketOffset.Value, 0); }
  public static void AddCommandId(FlatBufferBuilder builder, long commandId) { builder.AddLong(1, commandId, 0); }
  public static Offset<CppMMO.Protocol.C_Login> EndC_Login(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<CppMMO.Protocol.C_Login>(o);
  }
  public C_LoginT UnPack() {
    var _o = new C_LoginT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(C_LoginT _o) {
    _o.SessionTicket = this.SessionTicket;
    _o.CommandId = this.CommandId;
  }
  public static Offset<CppMMO.Protocol.C_Login> Pack(FlatBufferBuilder builder, C_LoginT _o) {
    if (_o == null) return default(Offset<CppMMO.Protocol.C_Login>);
    var _session_ticket = _o.SessionTicket == null ? default(StringOffset) : builder.CreateString(_o.SessionTicket);
    return CreateC_Login(
      builder,
      _session_ticket,
      _o.CommandId);
  }
}

public class C_LoginT
{
  public string SessionTicket { get; set; }
  public long CommandId { get; set; }

  public C_LoginT() {
    this.SessionTicket = null;
    this.CommandId = 0;
  }
}


static public class C_LoginVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*SessionTicket*/, false)
      && verifier.VerifyField(tablePos, 6 /*CommandId*/, 8 /*long*/, 8, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
