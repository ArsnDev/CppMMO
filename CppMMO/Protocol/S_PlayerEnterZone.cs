// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace CppMMO.Protocol
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct S_PlayerEnterZone : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static S_PlayerEnterZone GetRootAsS_PlayerEnterZone(ByteBuffer _bb) { return GetRootAsS_PlayerEnterZone(_bb, new S_PlayerEnterZone()); }
  public static S_PlayerEnterZone GetRootAsS_PlayerEnterZone(ByteBuffer _bb, S_PlayerEnterZone obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public S_PlayerEnterZone __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public CppMMO.Protocol.PlayerInfo? PlayerInfo { get { int o = __p.__offset(4); return o != 0 ? (CppMMO.Protocol.PlayerInfo?)(new CppMMO.Protocol.PlayerInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<CppMMO.Protocol.S_PlayerEnterZone> CreateS_PlayerEnterZone(FlatBufferBuilder builder,
      Offset<CppMMO.Protocol.PlayerInfo> player_infoOffset = default(Offset<CppMMO.Protocol.PlayerInfo>)) {
    builder.StartTable(1);
    S_PlayerEnterZone.AddPlayerInfo(builder, player_infoOffset);
    return S_PlayerEnterZone.EndS_PlayerEnterZone(builder);
  }

  public static void StartS_PlayerEnterZone(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddPlayerInfo(FlatBufferBuilder builder, Offset<CppMMO.Protocol.PlayerInfo> playerInfoOffset) { builder.AddOffset(0, playerInfoOffset.Value, 0); }
  public static Offset<CppMMO.Protocol.S_PlayerEnterZone> EndS_PlayerEnterZone(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<CppMMO.Protocol.S_PlayerEnterZone>(o);
  }
  public S_PlayerEnterZoneT UnPack() {
    var _o = new S_PlayerEnterZoneT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(S_PlayerEnterZoneT _o) {
    _o.PlayerInfo = this.PlayerInfo.HasValue ? this.PlayerInfo.Value.UnPack() : null;
  }
  public static Offset<CppMMO.Protocol.S_PlayerEnterZone> Pack(FlatBufferBuilder builder, S_PlayerEnterZoneT _o) {
    if (_o == null) return default(Offset<CppMMO.Protocol.S_PlayerEnterZone>);
    var _player_info = _o.PlayerInfo == null ? default(Offset<CppMMO.Protocol.PlayerInfo>) : CppMMO.Protocol.PlayerInfo.Pack(builder, _o.PlayerInfo);
    return CreateS_PlayerEnterZone(
      builder,
      _player_info);
  }
}

public class S_PlayerEnterZoneT
{
  public CppMMO.Protocol.PlayerInfoT PlayerInfo { get; set; }

  public S_PlayerEnterZoneT() {
    this.PlayerInfo = null;
  }
}


static public class S_PlayerEnterZoneVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyTable(tablePos, 4 /*PlayerInfo*/, CppMMO.Protocol.PlayerInfoVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
