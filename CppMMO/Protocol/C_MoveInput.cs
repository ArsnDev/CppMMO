// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace CppMMO.Protocol
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct C_MoveInput : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static C_MoveInput GetRootAsC_MoveInput(ByteBuffer _bb) { return GetRootAsC_MoveInput(_bb, new C_MoveInput()); }
  public static C_MoveInput GetRootAsC_MoveInput(ByteBuffer _bb, C_MoveInput obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public C_MoveInput __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public CppMMO.Protocol.Vec2? CurrentPosition { get { int o = __p.__offset(4); return o != 0 ? (CppMMO.Protocol.Vec2?)(new CppMMO.Protocol.Vec2()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public byte InputFlags { get { int o = __p.__offset(6); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public long Timestamp { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long CommandId { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static Offset<CppMMO.Protocol.C_MoveInput> CreateC_MoveInput(FlatBufferBuilder builder,
      Offset<CppMMO.Protocol.Vec2> current_positionOffset = default(Offset<CppMMO.Protocol.Vec2>),
      byte input_flags = 0,
      long timestamp = 0,
      long command_id = 0) {
    builder.StartTable(4);
    C_MoveInput.AddCommandId(builder, command_id);
    C_MoveInput.AddTimestamp(builder, timestamp);
    C_MoveInput.AddCurrentPosition(builder, current_positionOffset);
    C_MoveInput.AddInputFlags(builder, input_flags);
    return C_MoveInput.EndC_MoveInput(builder);
  }

  public static void StartC_MoveInput(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddCurrentPosition(FlatBufferBuilder builder, Offset<CppMMO.Protocol.Vec2> currentPositionOffset) { builder.AddOffset(0, currentPositionOffset.Value, 0); }
  public static void AddInputFlags(FlatBufferBuilder builder, byte inputFlags) { builder.AddByte(1, inputFlags, 0); }
  public static void AddTimestamp(FlatBufferBuilder builder, long timestamp) { builder.AddLong(2, timestamp, 0); }
  public static void AddCommandId(FlatBufferBuilder builder, long commandId) { builder.AddLong(3, commandId, 0); }
  public static Offset<CppMMO.Protocol.C_MoveInput> EndC_MoveInput(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<CppMMO.Protocol.C_MoveInput>(o);
  }
  public C_MoveInputT UnPack() {
    var _o = new C_MoveInputT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(C_MoveInputT _o) {
    _o.CurrentPosition = this.CurrentPosition.HasValue ? this.CurrentPosition.Value.UnPack() : null;
    _o.InputFlags = this.InputFlags;
    _o.Timestamp = this.Timestamp;
    _o.CommandId = this.CommandId;
  }
  public static Offset<CppMMO.Protocol.C_MoveInput> Pack(FlatBufferBuilder builder, C_MoveInputT _o) {
    if (_o == null) return default(Offset<CppMMO.Protocol.C_MoveInput>);
    var _current_position = _o.CurrentPosition == null ? default(Offset<CppMMO.Protocol.Vec2>) : CppMMO.Protocol.Vec2.Pack(builder, _o.CurrentPosition);
    return CreateC_MoveInput(
      builder,
      _current_position,
      _o.InputFlags,
      _o.Timestamp,
      _o.CommandId);
  }
}

public class C_MoveInputT
{
  public CppMMO.Protocol.Vec2T CurrentPosition { get; set; }
  public byte InputFlags { get; set; }
  public long Timestamp { get; set; }
  public long CommandId { get; set; }

  public C_MoveInputT() {
    this.CurrentPosition = null;
    this.InputFlags = 0;
    this.Timestamp = 0;
    this.CommandId = 0;
  }
}


static public class C_MoveInputVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyTable(tablePos, 4 /*CurrentPosition*/, CppMMO.Protocol.Vec2Verify.Verify, false)
      && verifier.VerifyField(tablePos, 6 /*InputFlags*/, 1 /*byte*/, 1, false)
      && verifier.VerifyField(tablePos, 8 /*Timestamp*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 10 /*CommandId*/, 8 /*long*/, 8, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
