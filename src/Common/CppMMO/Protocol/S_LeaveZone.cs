// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace CppMMO.Protocol
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct S_LeaveZone : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static S_LeaveZone GetRootAsS_LeaveZone(ByteBuffer _bb) { return GetRootAsS_LeaveZone(_bb, new S_LeaveZone()); }
  public static S_LeaveZone GetRootAsS_LeaveZone(ByteBuffer _bb, S_LeaveZone obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public S_LeaveZone __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void StartS_LeaveZone(FlatBufferBuilder builder) { builder.StartTable(0); }
  public static Offset<CppMMO.Protocol.S_LeaveZone> EndS_LeaveZone(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<CppMMO.Protocol.S_LeaveZone>(o);
  }
}


static public class S_LeaveZoneVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
