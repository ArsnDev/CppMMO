// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace CppMMO.Protocol
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct S_PlayerMove : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static S_PlayerMove GetRootAsS_PlayerMove(ByteBuffer _bb) { return GetRootAsS_PlayerMove(_bb, new S_PlayerMove()); }
  public static S_PlayerMove GetRootAsS_PlayerMove(ByteBuffer _bb, S_PlayerMove obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public S_PlayerMove __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long PlayerId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public CppMMO.Protocol.Vec2? TargetPosition { get { int o = __p.__offset(6); return o != 0 ? (CppMMO.Protocol.Vec2?)(new CppMMO.Protocol.Vec2()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public long CommandId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static void StartS_PlayerMove(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddPlayerId(FlatBufferBuilder builder, long playerId) { builder.AddLong(0, playerId, 0); }
  public static void AddTargetPosition(FlatBufferBuilder builder, Offset<CppMMO.Protocol.Vec2> targetPositionOffset) { builder.AddStruct(1, targetPositionOffset.Value, 0); }
  public static void AddCommandId(FlatBufferBuilder builder, long commandId) { builder.AddLong(2, commandId, 0); }
  public static Offset<CppMMO.Protocol.S_PlayerMove> EndS_PlayerMove(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<CppMMO.Protocol.S_PlayerMove>(o);
  }
}


static public class S_PlayerMoveVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*PlayerId*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 6 /*TargetPosition*/, 8 /*CppMMO.Protocol.Vec2*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*CommandId*/, 8 /*long*/, 8, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
