# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Protocol

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class S_Chat(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = S_Chat()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsS_Chat(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # S_Chat
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # S_Chat
    def PlayerId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # S_Chat
    def Message(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # S_Chat
    def CommandId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def S_ChatStart(builder):
    builder.StartObject(3)

def Start(builder):
    S_ChatStart(builder)

def S_ChatAddPlayerId(builder, playerId):
    builder.PrependInt64Slot(0, playerId, 0)

def AddPlayerId(builder, playerId):
    S_ChatAddPlayerId(builder, playerId)

def S_ChatAddMessage(builder, message):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(message), 0)

def AddMessage(builder, message):
    S_ChatAddMessage(builder, message)

def S_ChatAddCommandId(builder, commandId):
    builder.PrependInt64Slot(2, commandId, 0)

def AddCommandId(builder, commandId):
    S_ChatAddCommandId(builder, commandId)

def S_ChatEnd(builder):
    return builder.EndObject()

def End(builder):
    return S_ChatEnd(builder)
