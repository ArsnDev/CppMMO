# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Protocol

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class S_PlayerMove(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = S_PlayerMove()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsS_PlayerMove(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # S_PlayerMove
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # S_PlayerMove
    def PlayerId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # S_PlayerMove
    def TargetPosition(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = o + self._tab.Pos
            from CppMMO.Protocol.Vec2 import Vec2
            obj = Vec2()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # S_PlayerMove
    def CommandId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def S_PlayerMoveStart(builder):
    builder.StartObject(3)

def Start(builder):
    S_PlayerMoveStart(builder)

def S_PlayerMoveAddPlayerId(builder, playerId):
    builder.PrependInt64Slot(0, playerId, 0)

def AddPlayerId(builder, playerId):
    S_PlayerMoveAddPlayerId(builder, playerId)

def S_PlayerMoveAddTargetPosition(builder, targetPosition):
    builder.PrependStructSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(targetPosition), 0)

def AddTargetPosition(builder, targetPosition):
    S_PlayerMoveAddTargetPosition(builder, targetPosition)

def S_PlayerMoveAddCommandId(builder, commandId):
    builder.PrependInt64Slot(2, commandId, 0)

def AddCommandId(builder, commandId):
    S_PlayerMoveAddCommandId(builder, commandId)

def S_PlayerMoveEnd(builder):
    return builder.EndObject()

def End(builder):
    return S_PlayerMoveEnd(builder)
