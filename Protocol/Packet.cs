// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace CppMMO.Protocol
{

public enum Packet : byte
{
  NONE = 0,
  C_Login = 1,
  S_LoginSuccess = 2,
  S_LoginFailure = 3,
  C_Chat = 4,
  S_Chat = 5,
  C_MoveInput = 6,
  S_PlayerMoveState = 7,
  S_PlayerHpUpdate = 8,
  C_ChangeZone = 9,
  S_EnterZone = 10,
  S_LeaveZone = 11,
  S_PlayerEnterZone = 12,
  S_PlayerLeaveZone = 13,
};

public class PacketUnion {
  public Packet Type { get; set; }
  public object Value { get; set; }

  public PacketUnion() {
    this.Type = Packet.NONE;
    this.Value = null;
  }

  public T As<T>() where T : class { return this.Value as T; }
  public CppMMO.Protocol.C_LoginT AsC_Login() { return this.As<CppMMO.Protocol.C_LoginT>(); }
  public static PacketUnion FromC_Login(CppMMO.Protocol.C_LoginT _c_login) { return new PacketUnion{ Type = Packet.C_Login, Value = _c_login }; }
  public CppMMO.Protocol.S_LoginSuccessT AsS_LoginSuccess() { return this.As<CppMMO.Protocol.S_LoginSuccessT>(); }
  public static PacketUnion FromS_LoginSuccess(CppMMO.Protocol.S_LoginSuccessT _s_loginsuccess) { return new PacketUnion{ Type = Packet.S_LoginSuccess, Value = _s_loginsuccess }; }
  public CppMMO.Protocol.S_LoginFailureT AsS_LoginFailure() { return this.As<CppMMO.Protocol.S_LoginFailureT>(); }
  public static PacketUnion FromS_LoginFailure(CppMMO.Protocol.S_LoginFailureT _s_loginfailure) { return new PacketUnion{ Type = Packet.S_LoginFailure, Value = _s_loginfailure }; }
  public CppMMO.Protocol.C_ChatT AsC_Chat() { return this.As<CppMMO.Protocol.C_ChatT>(); }
  public static PacketUnion FromC_Chat(CppMMO.Protocol.C_ChatT _c_chat) { return new PacketUnion{ Type = Packet.C_Chat, Value = _c_chat }; }
  public CppMMO.Protocol.S_ChatT AsS_Chat() { return this.As<CppMMO.Protocol.S_ChatT>(); }
  public static PacketUnion FromS_Chat(CppMMO.Protocol.S_ChatT _s_chat) { return new PacketUnion{ Type = Packet.S_Chat, Value = _s_chat }; }
  public CppMMO.Protocol.C_MoveInputT AsC_MoveInput() { return this.As<CppMMO.Protocol.C_MoveInputT>(); }
  public static PacketUnion FromC_MoveInput(CppMMO.Protocol.C_MoveInputT _c_moveinput) { return new PacketUnion{ Type = Packet.C_MoveInput, Value = _c_moveinput }; }
  public CppMMO.Protocol.S_PlayerMoveStateT AsS_PlayerMoveState() { return this.As<CppMMO.Protocol.S_PlayerMoveStateT>(); }
  public static PacketUnion FromS_PlayerMoveState(CppMMO.Protocol.S_PlayerMoveStateT _s_playermovestate) { return new PacketUnion{ Type = Packet.S_PlayerMoveState, Value = _s_playermovestate }; }
  public CppMMO.Protocol.S_PlayerHpUpdateT AsS_PlayerHpUpdate() { return this.As<CppMMO.Protocol.S_PlayerHpUpdateT>(); }
  public static PacketUnion FromS_PlayerHpUpdate(CppMMO.Protocol.S_PlayerHpUpdateT _s_playerhpupdate) { return new PacketUnion{ Type = Packet.S_PlayerHpUpdate, Value = _s_playerhpupdate }; }
  public CppMMO.Protocol.C_ChangeZoneT AsC_ChangeZone() { return this.As<CppMMO.Protocol.C_ChangeZoneT>(); }
  public static PacketUnion FromC_ChangeZone(CppMMO.Protocol.C_ChangeZoneT _c_changezone) { return new PacketUnion{ Type = Packet.C_ChangeZone, Value = _c_changezone }; }
  public CppMMO.Protocol.S_EnterZoneT AsS_EnterZone() { return this.As<CppMMO.Protocol.S_EnterZoneT>(); }
  public static PacketUnion FromS_EnterZone(CppMMO.Protocol.S_EnterZoneT _s_enterzone) { return new PacketUnion{ Type = Packet.S_EnterZone, Value = _s_enterzone }; }
  public CppMMO.Protocol.S_LeaveZoneT AsS_LeaveZone() { return this.As<CppMMO.Protocol.S_LeaveZoneT>(); }
  public static PacketUnion FromS_LeaveZone(CppMMO.Protocol.S_LeaveZoneT _s_leavezone) { return new PacketUnion{ Type = Packet.S_LeaveZone, Value = _s_leavezone }; }
  public CppMMO.Protocol.S_PlayerEnterZoneT AsS_PlayerEnterZone() { return this.As<CppMMO.Protocol.S_PlayerEnterZoneT>(); }
  public static PacketUnion FromS_PlayerEnterZone(CppMMO.Protocol.S_PlayerEnterZoneT _s_playerenterzone) { return new PacketUnion{ Type = Packet.S_PlayerEnterZone, Value = _s_playerenterzone }; }
  public CppMMO.Protocol.S_PlayerLeaveZoneT AsS_PlayerLeaveZone() { return this.As<CppMMO.Protocol.S_PlayerLeaveZoneT>(); }
  public static PacketUnion FromS_PlayerLeaveZone(CppMMO.Protocol.S_PlayerLeaveZoneT _s_playerleavezone) { return new PacketUnion{ Type = Packet.S_PlayerLeaveZone, Value = _s_playerleavezone }; }

  public static int Pack(Google.FlatBuffers.FlatBufferBuilder builder, PacketUnion _o) {
    switch (_o.Type) {
      default: return 0;
      case Packet.C_Login: return CppMMO.Protocol.C_Login.Pack(builder, _o.AsC_Login()).Value;
      case Packet.S_LoginSuccess: return CppMMO.Protocol.S_LoginSuccess.Pack(builder, _o.AsS_LoginSuccess()).Value;
      case Packet.S_LoginFailure: return CppMMO.Protocol.S_LoginFailure.Pack(builder, _o.AsS_LoginFailure()).Value;
      case Packet.C_Chat: return CppMMO.Protocol.C_Chat.Pack(builder, _o.AsC_Chat()).Value;
      case Packet.S_Chat: return CppMMO.Protocol.S_Chat.Pack(builder, _o.AsS_Chat()).Value;
      case Packet.C_MoveInput: return CppMMO.Protocol.C_MoveInput.Pack(builder, _o.AsC_MoveInput()).Value;
      case Packet.S_PlayerMoveState: return CppMMO.Protocol.S_PlayerMoveState.Pack(builder, _o.AsS_PlayerMoveState()).Value;
      case Packet.S_PlayerHpUpdate: return CppMMO.Protocol.S_PlayerHpUpdate.Pack(builder, _o.AsS_PlayerHpUpdate()).Value;
      case Packet.C_ChangeZone: return CppMMO.Protocol.C_ChangeZone.Pack(builder, _o.AsC_ChangeZone()).Value;
      case Packet.S_EnterZone: return CppMMO.Protocol.S_EnterZone.Pack(builder, _o.AsS_EnterZone()).Value;
      case Packet.S_LeaveZone: return CppMMO.Protocol.S_LeaveZone.Pack(builder, _o.AsS_LeaveZone()).Value;
      case Packet.S_PlayerEnterZone: return CppMMO.Protocol.S_PlayerEnterZone.Pack(builder, _o.AsS_PlayerEnterZone()).Value;
      case Packet.S_PlayerLeaveZone: return CppMMO.Protocol.S_PlayerLeaveZone.Pack(builder, _o.AsS_PlayerLeaveZone()).Value;
    }
  }
}



static public class PacketVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, byte typeId, uint tablePos)
  {
    bool result = true;
    switch((Packet)typeId)
    {
      case Packet.C_Login:
        result = CppMMO.Protocol.C_LoginVerify.Verify(verifier, tablePos);
        break;
      case Packet.S_LoginSuccess:
        result = CppMMO.Protocol.S_LoginSuccessVerify.Verify(verifier, tablePos);
        break;
      case Packet.S_LoginFailure:
        result = CppMMO.Protocol.S_LoginFailureVerify.Verify(verifier, tablePos);
        break;
      case Packet.C_Chat:
        result = CppMMO.Protocol.C_ChatVerify.Verify(verifier, tablePos);
        break;
      case Packet.S_Chat:
        result = CppMMO.Protocol.S_ChatVerify.Verify(verifier, tablePos);
        break;
      case Packet.C_MoveInput:
        result = CppMMO.Protocol.C_MoveInputVerify.Verify(verifier, tablePos);
        break;
      case Packet.S_PlayerMoveState:
        result = CppMMO.Protocol.S_PlayerMoveStateVerify.Verify(verifier, tablePos);
        break;
      case Packet.S_PlayerHpUpdate:
        result = CppMMO.Protocol.S_PlayerHpUpdateVerify.Verify(verifier, tablePos);
        break;
      case Packet.C_ChangeZone:
        result = CppMMO.Protocol.C_ChangeZoneVerify.Verify(verifier, tablePos);
        break;
      case Packet.S_EnterZone:
        result = CppMMO.Protocol.S_EnterZoneVerify.Verify(verifier, tablePos);
        break;
      case Packet.S_LeaveZone:
        result = CppMMO.Protocol.S_LeaveZoneVerify.Verify(verifier, tablePos);
        break;
      case Packet.S_PlayerEnterZone:
        result = CppMMO.Protocol.S_PlayerEnterZoneVerify.Verify(verifier, tablePos);
        break;
      case Packet.S_PlayerLeaveZone:
        result = CppMMO.Protocol.S_PlayerLeaveZoneVerify.Verify(verifier, tablePos);
        break;
      default: result = true;
        break;
    }
    return result;
  }
}


}
